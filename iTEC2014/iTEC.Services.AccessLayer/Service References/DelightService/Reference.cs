//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iTEC.Services.AccessLayer.DelightService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountAvatarDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class AccountAvatarDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RememberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Remember {
            get {
                return this.RememberField;
            }
            set {
                if ((this.RememberField.Equals(value) != true)) {
                    this.RememberField = value;
                    this.RaisePropertyChanged("Remember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.EntityDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.CategoryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.ProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.PricedProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.UserGroupDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.ProductFromCategoryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.UserDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.UserFromGroupDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VoteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.MessageDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO))]
    public partial class IdentityDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.CategoryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.ProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.PricedProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.UserGroupDTO))]
    public partial class EntityDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO))]
    public partial class CategoryDTO : iTEC.Services.AccessLayer.DelightService.EntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VotedCategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class VotedCategoryDTO : iTEC.Services.AccessLayer.DelightService.CategoryDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.PricedProductDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedProductDTO))]
    public partial class ProductDTO : iTEC.Services.AccessLayer.DelightService.EntityDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PricedProductDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.VotedProductDTO))]
    public partial class PricedProductDTO : iTEC.Services.AccessLayer.DelightService.ProductDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VotedProductDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class VotedProductDTO : iTEC.Services.AccessLayer.DelightService.PricedProductDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroupDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class UserGroupDTO : iTEC.Services.AccessLayer.DelightService.EntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductFromCategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class ProductFromCategoryDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InGroup {
            get {
                return this.InGroupField;
            }
            set {
                if ((this.InGroupField.Equals(value) != true)) {
                    this.InGroupField = value;
                    this.RaisePropertyChanged("InGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class UserDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFromGroupDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class UserFromGroupDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InGroup {
            get {
                return this.InGroupField;
            }
            set {
                if ((this.InGroupField.Equals(value) != true)) {
                    this.InGroupField = value;
                    this.RaisePropertyChanged("InGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoteDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class VoteDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.PricedProductDTO ProductField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.PricedProductDTO Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class MessageDTO : iTEC.Services.AccessLayer.DelightService.IdentityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BudgetDTO", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class BudgetDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportChart", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.AreasplineReportChart))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.ProductVoteReportChart))]
    public partial class ReportChart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.ChartType ChartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.ChartSeries[] SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.Title SubtitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.Title TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.Tooltip TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.XAxis XAxisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.YAxis YAxisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.ChartType Chart {
            get {
                return this.ChartField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartField, value) != true)) {
                    this.ChartField = value;
                    this.RaisePropertyChanged("Chart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.ChartSeries[] Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.Title Subtitle {
            get {
                return this.SubtitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubtitleField, value) != true)) {
                    this.SubtitleField = value;
                    this.RaisePropertyChanged("Subtitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.Title Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.Tooltip Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.XAxis XAxis {
            get {
                return this.XAxisField;
            }
            set {
                if ((object.ReferenceEquals(this.XAxisField, value) != true)) {
                    this.XAxisField = value;
                    this.RaisePropertyChanged("XAxis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.YAxis YAxis {
            get {
                return this.YAxisField;
            }
            set {
                if ((object.ReferenceEquals(this.YAxisField, value) != true)) {
                    this.YAxisField = value;
                    this.RaisePropertyChanged("YAxis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChartType", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class ChartType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Title", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class Title : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tooltip", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class Tooltip : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SharedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueSuffixField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Shared {
            get {
                return this.SharedField;
            }
            set {
                if ((this.SharedField.Equals(value) != true)) {
                    this.SharedField = value;
                    this.RaisePropertyChanged("Shared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueSuffix {
            get {
                return this.ValueSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueSuffixField, value) != true)) {
                    this.ValueSuffixField = value;
                    this.RaisePropertyChanged("ValueSuffix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XAxis", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class XAxis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YAxis", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class YAxis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iTEC.Services.AccessLayer.DelightService.Title TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iTEC.Services.AccessLayer.DelightService.Title Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreasplineReportChart", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(iTEC.Services.AccessLayer.DelightService.ProductVoteReportChart))]
    public partial class AreasplineReportChart : iTEC.Services.AccessLayer.DelightService.ReportChart {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductVoteReportChart", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class ProductVoteReportChart : iTEC.Services.AccessLayer.DelightService.AreasplineReportChart {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChartSeries", Namespace="http://schemas.datacontract.org/2004/07/iTEC.BL.Interfaces.DTOs")]
    [System.SerializableAttribute()]
    public partial class ChartSeries : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DelightService.IDelightService")]
    public interface IDelightService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAccounts", ReplyAction="http://tempuri.org/IDelightService/GetAccountsResponse")]
        iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO[] GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAccounts", ReplyAction="http://tempuri.org/IDelightService/GetAccountsResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO[]> GetAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUserStateInfo", ReplyAction="http://tempuri.org/IDelightService/GetUserStateInfoResponse")]
        iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO GetUserStateInfo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUserStateInfo", ReplyAction="http://tempuri.org/IDelightService/GetUserStateInfoResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO> GetUserStateInfoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/Authenticate", ReplyAction="http://tempuri.org/IDelightService/AuthenticateResponse")]
        int Authenticate(string username, string password, bool remember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/Authenticate", ReplyAction="http://tempuri.org/IDelightService/AuthenticateResponse")]
        System.Threading.Tasks.Task<int> AuthenticateAsync(string username, string password, bool remember);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RegisterUser", ReplyAction="http://tempuri.org/IDelightService/RegisterUserResponse")]
        void RegisterUser(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RegisterUser", ReplyAction="http://tempuri.org/IDelightService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RegisterOwner", ReplyAction="http://tempuri.org/IDelightService/RegisterOwnerResponse")]
        void RegisterOwner(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RegisterOwner", ReplyAction="http://tempuri.org/IDelightService/RegisterOwnerResponse")]
        System.Threading.Tasks.Task RegisterOwnerAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAccountId", ReplyAction="http://tempuri.org/IDelightService/GetAccountIdResponse")]
        int GetAccountId(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAccountId", ReplyAction="http://tempuri.org/IDelightService/GetAccountIdResponse")]
        System.Threading.Tasks.Task<int> GetAccountIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetCategories", ReplyAction="http://tempuri.org/IDelightService/GetCategoriesResponse")]
        iTEC.Services.AccessLayer.DelightService.CategoryDTO[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetCategories", ReplyAction="http://tempuri.org/IDelightService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.CategoryDTO[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetCategory", ReplyAction="http://tempuri.org/IDelightService/GetCategoryResponse")]
        iTEC.Services.AccessLayer.DelightService.CategoryDTO GetCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetCategory", ReplyAction="http://tempuri.org/IDelightService/GetCategoryResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.CategoryDTO> GetCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetVotedCategories", ReplyAction="http://tempuri.org/IDelightService/GetVotedCategoriesResponse")]
        iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO[] GetVotedCategories(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetVotedCategories", ReplyAction="http://tempuri.org/IDelightService/GetVotedCategoriesResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO[]> GetVotedCategoriesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProductsFromCategory", ReplyAction="http://tempuri.org/IDelightService/GetProductsFromCategoryResponse")]
        iTEC.Services.AccessLayer.DelightService.VotedProductDTO[] GetProductsFromCategory(string username, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProductsFromCategory", ReplyAction="http://tempuri.org/IDelightService/GetProductsFromCategoryResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VotedProductDTO[]> GetProductsFromCategoryAsync(string username, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/AddProductToCategory", ReplyAction="http://tempuri.org/IDelightService/AddProductToCategoryResponse")]
        void AddProductToCategory(int categoryId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/AddProductToCategory", ReplyAction="http://tempuri.org/IDelightService/AddProductToCategoryResponse")]
        System.Threading.Tasks.Task AddProductToCategoryAsync(int categoryId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RemoveProductFromCategory", ReplyAction="http://tempuri.org/IDelightService/RemoveProductFromCategoryResponse")]
        void RemoveProductFromCategory(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RemoveProductFromCategory", ReplyAction="http://tempuri.org/IDelightService/RemoveProductFromCategoryResponse")]
        System.Threading.Tasks.Task RemoveProductFromCategoryAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteCategory", ReplyAction="http://tempuri.org/IDelightService/DeleteCategoryResponse")]
        void DeleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteCategory", ReplyAction="http://tempuri.org/IDelightService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveCategory", ReplyAction="http://tempuri.org/IDelightService/SaveCategoryResponse")]
        int SaveCategory(iTEC.Services.AccessLayer.DelightService.CategoryDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveCategory", ReplyAction="http://tempuri.org/IDelightService/SaveCategoryResponse")]
        System.Threading.Tasks.Task<int> SaveCategoryAsync(iTEC.Services.AccessLayer.DelightService.CategoryDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProducts", ReplyAction="http://tempuri.org/IDelightService/GetProductsResponse")]
        iTEC.Services.AccessLayer.DelightService.PricedProductDTO[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProducts", ReplyAction="http://tempuri.org/IDelightService/GetProductsResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.PricedProductDTO[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProduct", ReplyAction="http://tempuri.org/IDelightService/GetProductResponse")]
        iTEC.Services.AccessLayer.DelightService.PricedProductDTO GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProduct", ReplyAction="http://tempuri.org/IDelightService/GetProductResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.PricedProductDTO> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAllProductsCompareToSpecificCategory", ReplyAction="http://tempuri.org/IDelightService/GetAllProductsCompareToSpecificCategoryRespons" +
            "e")]
        iTEC.Services.AccessLayer.DelightService.ProductFromCategoryDTO[] GetAllProductsCompareToSpecificCategory(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAllProductsCompareToSpecificCategory", ReplyAction="http://tempuri.org/IDelightService/GetAllProductsCompareToSpecificCategoryRespons" +
            "e")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.ProductFromCategoryDTO[]> GetAllProductsCompareToSpecificCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteProduct", ReplyAction="http://tempuri.org/IDelightService/DeleteProductResponse")]
        void DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteProduct", ReplyAction="http://tempuri.org/IDelightService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveProduct", ReplyAction="http://tempuri.org/IDelightService/SaveProductResponse")]
        int SaveProduct(iTEC.Services.AccessLayer.DelightService.PricedProductDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveProduct", ReplyAction="http://tempuri.org/IDelightService/SaveProductResponse")]
        System.Threading.Tasks.Task<int> SaveProductAsync(iTEC.Services.AccessLayer.DelightService.PricedProductDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUserGroups", ReplyAction="http://tempuri.org/IDelightService/GetUserGroupsResponse")]
        iTEC.Services.AccessLayer.DelightService.UserGroupDTO[] GetUserGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUserGroups", ReplyAction="http://tempuri.org/IDelightService/GetUserGroupsResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserGroupDTO[]> GetUserGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUserGroup", ReplyAction="http://tempuri.org/IDelightService/GetUserGroupResponse")]
        iTEC.Services.AccessLayer.DelightService.UserGroupDTO GetUserGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUserGroup", ReplyAction="http://tempuri.org/IDelightService/GetUserGroupResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserGroupDTO> GetUserGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUsersFromGroup", ReplyAction="http://tempuri.org/IDelightService/GetUsersFromGroupResponse")]
        iTEC.Services.AccessLayer.DelightService.UserDTO[] GetUsersFromGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUsersFromGroup", ReplyAction="http://tempuri.org/IDelightService/GetUsersFromGroupResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserDTO[]> GetUsersFromGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/AddUserToGroup", ReplyAction="http://tempuri.org/IDelightService/AddUserToGroupResponse")]
        void AddUserToGroup(int userGroupId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/AddUserToGroup", ReplyAction="http://tempuri.org/IDelightService/AddUserToGroupResponse")]
        System.Threading.Tasks.Task AddUserToGroupAsync(int userGroupId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RemoveUserFromGroup", ReplyAction="http://tempuri.org/IDelightService/RemoveUserFromGroupResponse")]
        void RemoveUserFromGroup(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/RemoveUserFromGroup", ReplyAction="http://tempuri.org/IDelightService/RemoveUserFromGroupResponse")]
        System.Threading.Tasks.Task RemoveUserFromGroupAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteUserGroup", ReplyAction="http://tempuri.org/IDelightService/DeleteUserGroupResponse")]
        void DeleteUserGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteUserGroup", ReplyAction="http://tempuri.org/IDelightService/DeleteUserGroupResponse")]
        System.Threading.Tasks.Task DeleteUserGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveUserGroup", ReplyAction="http://tempuri.org/IDelightService/SaveUserGroupResponse")]
        int SaveUserGroup(iTEC.Services.AccessLayer.DelightService.UserGroupDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveUserGroup", ReplyAction="http://tempuri.org/IDelightService/SaveUserGroupResponse")]
        System.Threading.Tasks.Task<int> SaveUserGroupAsync(iTEC.Services.AccessLayer.DelightService.UserGroupDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUsers", ReplyAction="http://tempuri.org/IDelightService/GetUsersResponse")]
        iTEC.Services.AccessLayer.DelightService.UserDTO[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUsers", ReplyAction="http://tempuri.org/IDelightService/GetUsersResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserDTO[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUser", ReplyAction="http://tempuri.org/IDelightService/GetUserResponse")]
        iTEC.Services.AccessLayer.DelightService.UserDTO GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetUser", ReplyAction="http://tempuri.org/IDelightService/GetUserResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserDTO> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAllUsersCompareToSpecificGroup", ReplyAction="http://tempuri.org/IDelightService/GetAllUsersCompareToSpecificGroupResponse")]
        iTEC.Services.AccessLayer.DelightService.UserFromGroupDTO[] GetAllUsersCompareToSpecificGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAllUsersCompareToSpecificGroup", ReplyAction="http://tempuri.org/IDelightService/GetAllUsersCompareToSpecificGroupResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserFromGroupDTO[]> GetAllUsersCompareToSpecificGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteUser", ReplyAction="http://tempuri.org/IDelightService/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteUser", ReplyAction="http://tempuri.org/IDelightService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveUser", ReplyAction="http://tempuri.org/IDelightService/SaveUserResponse")]
        int SaveUser(iTEC.Services.AccessLayer.DelightService.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveUser", ReplyAction="http://tempuri.org/IDelightService/SaveUserResponse")]
        System.Threading.Tasks.Task<int> SaveUserAsync(iTEC.Services.AccessLayer.DelightService.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetVotes", ReplyAction="http://tempuri.org/IDelightService/GetVotesResponse")]
        iTEC.Services.AccessLayer.DelightService.VotedProductDTO[] GetVotes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetVotes", ReplyAction="http://tempuri.org/IDelightService/GetVotesResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VotedProductDTO[]> GetVotesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetVote", ReplyAction="http://tempuri.org/IDelightService/GetVoteResponse")]
        iTEC.Services.AccessLayer.DelightService.VoteDTO GetVote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetVote", ReplyAction="http://tempuri.org/IDelightService/GetVoteResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VoteDTO> GetVoteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteVote", ReplyAction="http://tempuri.org/IDelightService/DeleteVoteResponse")]
        void DeleteVote(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/DeleteVote", ReplyAction="http://tempuri.org/IDelightService/DeleteVoteResponse")]
        System.Threading.Tasks.Task DeleteVoteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveVote", ReplyAction="http://tempuri.org/IDelightService/SaveVoteResponse")]
        int SaveVote(iTEC.Services.AccessLayer.DelightService.VoteDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveVote", ReplyAction="http://tempuri.org/IDelightService/SaveVoteResponse")]
        System.Threading.Tasks.Task<int> SaveVoteAsync(iTEC.Services.AccessLayer.DelightService.VoteDTO userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/Vote", ReplyAction="http://tempuri.org/IDelightService/VoteResponse")]
        int Vote(string username, int productId, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/Vote", ReplyAction="http://tempuri.org/IDelightService/VoteResponse")]
        System.Threading.Tasks.Task<int> VoteAsync(string username, int productId, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAllVotedPoints", ReplyAction="http://tempuri.org/IDelightService/GetAllVotedPointsResponse")]
        int GetAllVotedPoints();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAllVotedPoints", ReplyAction="http://tempuri.org/IDelightService/GetAllVotedPointsResponse")]
        System.Threading.Tasks.Task<int> GetAllVotedPointsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAvailablePoints", ReplyAction="http://tempuri.org/IDelightService/GetAvailablePointsResponse")]
        int GetAvailablePoints(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetAvailablePoints", ReplyAction="http://tempuri.org/IDelightService/GetAvailablePointsResponse")]
        System.Threading.Tasks.Task<int> GetAvailablePointsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetBudget", ReplyAction="http://tempuri.org/IDelightService/GetBudgetResponse")]
        iTEC.Services.AccessLayer.DelightService.BudgetDTO[] GetBudget(int budget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetBudget", ReplyAction="http://tempuri.org/IDelightService/GetBudgetResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.BudgetDTO[]> GetBudgetAsync(int budget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProductVoteReport", ReplyAction="http://tempuri.org/IDelightService/GetProductVoteReportResponse")]
        iTEC.Services.AccessLayer.DelightService.ProductVoteReportChart GetProductVoteReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetProductVoteReport", ReplyAction="http://tempuri.org/IDelightService/GetProductVoteReportResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.ProductVoteReportChart> GetProductVoteReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/StartSession", ReplyAction="http://tempuri.org/IDelightService/StartSessionResponse")]
        void StartSession();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/StartSession", ReplyAction="http://tempuri.org/IDelightService/StartSessionResponse")]
        System.Threading.Tasks.Task StartSessionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetMessage", ReplyAction="http://tempuri.org/IDelightService/GetMessageResponse")]
        iTEC.Services.AccessLayer.DelightService.MessageDTO GetMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/GetMessage", ReplyAction="http://tempuri.org/IDelightService/GetMessageResponse")]
        System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.MessageDTO> GetMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveMessage", ReplyAction="http://tempuri.org/IDelightService/SaveMessageResponse")]
        void SaveMessage(iTEC.Services.AccessLayer.DelightService.MessageDTO message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDelightService/SaveMessage", ReplyAction="http://tempuri.org/IDelightService/SaveMessageResponse")]
        System.Threading.Tasks.Task SaveMessageAsync(iTEC.Services.AccessLayer.DelightService.MessageDTO message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDelightServiceChannel : iTEC.Services.AccessLayer.DelightService.IDelightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelightServiceClient : System.ServiceModel.ClientBase<iTEC.Services.AccessLayer.DelightService.IDelightService>, iTEC.Services.AccessLayer.DelightService.IDelightService {
        
        public DelightServiceClient() {
        }
        
        public DelightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DelightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DelightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DelightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO[] GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO[]> GetAccountsAsync() {
            return base.Channel.GetAccountsAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO GetUserStateInfo(int id) {
            return base.Channel.GetUserStateInfo(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.AccountAvatarDTO> GetUserStateInfoAsync(int id) {
            return base.Channel.GetUserStateInfoAsync(id);
        }
        
        public int Authenticate(string username, string password, bool remember) {
            return base.Channel.Authenticate(username, password, remember);
        }
        
        public System.Threading.Tasks.Task<int> AuthenticateAsync(string username, string password, bool remember) {
            return base.Channel.AuthenticateAsync(username, password, remember);
        }
        
        public void RegisterUser(string username, string password, string email) {
            base.Channel.RegisterUser(username, password, email);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(string username, string password, string email) {
            return base.Channel.RegisterUserAsync(username, password, email);
        }
        
        public void RegisterOwner(string username, string password, string email) {
            base.Channel.RegisterOwner(username, password, email);
        }
        
        public System.Threading.Tasks.Task RegisterOwnerAsync(string username, string password, string email) {
            return base.Channel.RegisterOwnerAsync(username, password, email);
        }
        
        public int GetAccountId(string username) {
            return base.Channel.GetAccountId(username);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountIdAsync(string username) {
            return base.Channel.GetAccountIdAsync(username);
        }
        
        public iTEC.Services.AccessLayer.DelightService.CategoryDTO[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.CategoryDTO[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.CategoryDTO GetCategory(int id) {
            return base.Channel.GetCategory(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.CategoryDTO> GetCategoryAsync(int id) {
            return base.Channel.GetCategoryAsync(id);
        }
        
        public iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO[] GetVotedCategories(string username) {
            return base.Channel.GetVotedCategories(username);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VotedCategoryDTO[]> GetVotedCategoriesAsync(string username) {
            return base.Channel.GetVotedCategoriesAsync(username);
        }
        
        public iTEC.Services.AccessLayer.DelightService.VotedProductDTO[] GetProductsFromCategory(string username, int id) {
            return base.Channel.GetProductsFromCategory(username, id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VotedProductDTO[]> GetProductsFromCategoryAsync(string username, int id) {
            return base.Channel.GetProductsFromCategoryAsync(username, id);
        }
        
        public void AddProductToCategory(int categoryId, int productId) {
            base.Channel.AddProductToCategory(categoryId, productId);
        }
        
        public System.Threading.Tasks.Task AddProductToCategoryAsync(int categoryId, int productId) {
            return base.Channel.AddProductToCategoryAsync(categoryId, productId);
        }
        
        public void RemoveProductFromCategory(int productId) {
            base.Channel.RemoveProductFromCategory(productId);
        }
        
        public System.Threading.Tasks.Task RemoveProductFromCategoryAsync(int productId) {
            return base.Channel.RemoveProductFromCategoryAsync(productId);
        }
        
        public void DeleteCategory(int id) {
            base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public int SaveCategory(iTEC.Services.AccessLayer.DelightService.CategoryDTO userGroup) {
            return base.Channel.SaveCategory(userGroup);
        }
        
        public System.Threading.Tasks.Task<int> SaveCategoryAsync(iTEC.Services.AccessLayer.DelightService.CategoryDTO userGroup) {
            return base.Channel.SaveCategoryAsync(userGroup);
        }
        
        public iTEC.Services.AccessLayer.DelightService.PricedProductDTO[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.PricedProductDTO[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.PricedProductDTO GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.PricedProductDTO> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public iTEC.Services.AccessLayer.DelightService.ProductFromCategoryDTO[] GetAllProductsCompareToSpecificCategory(int categoryId) {
            return base.Channel.GetAllProductsCompareToSpecificCategory(categoryId);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.ProductFromCategoryDTO[]> GetAllProductsCompareToSpecificCategoryAsync(int categoryId) {
            return base.Channel.GetAllProductsCompareToSpecificCategoryAsync(categoryId);
        }
        
        public void DeleteProduct(int id) {
            base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public int SaveProduct(iTEC.Services.AccessLayer.DelightService.PricedProductDTO userGroup) {
            return base.Channel.SaveProduct(userGroup);
        }
        
        public System.Threading.Tasks.Task<int> SaveProductAsync(iTEC.Services.AccessLayer.DelightService.PricedProductDTO userGroup) {
            return base.Channel.SaveProductAsync(userGroup);
        }
        
        public iTEC.Services.AccessLayer.DelightService.UserGroupDTO[] GetUserGroups() {
            return base.Channel.GetUserGroups();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserGroupDTO[]> GetUserGroupsAsync() {
            return base.Channel.GetUserGroupsAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.UserGroupDTO GetUserGroup(int id) {
            return base.Channel.GetUserGroup(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserGroupDTO> GetUserGroupAsync(int id) {
            return base.Channel.GetUserGroupAsync(id);
        }
        
        public iTEC.Services.AccessLayer.DelightService.UserDTO[] GetUsersFromGroup(int id) {
            return base.Channel.GetUsersFromGroup(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserDTO[]> GetUsersFromGroupAsync(int id) {
            return base.Channel.GetUsersFromGroupAsync(id);
        }
        
        public void AddUserToGroup(int userGroupId, int userId) {
            base.Channel.AddUserToGroup(userGroupId, userId);
        }
        
        public System.Threading.Tasks.Task AddUserToGroupAsync(int userGroupId, int userId) {
            return base.Channel.AddUserToGroupAsync(userGroupId, userId);
        }
        
        public void RemoveUserFromGroup(int userId) {
            base.Channel.RemoveUserFromGroup(userId);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromGroupAsync(int userId) {
            return base.Channel.RemoveUserFromGroupAsync(userId);
        }
        
        public void DeleteUserGroup(int id) {
            base.Channel.DeleteUserGroup(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserGroupAsync(int id) {
            return base.Channel.DeleteUserGroupAsync(id);
        }
        
        public int SaveUserGroup(iTEC.Services.AccessLayer.DelightService.UserGroupDTO userGroup) {
            return base.Channel.SaveUserGroup(userGroup);
        }
        
        public System.Threading.Tasks.Task<int> SaveUserGroupAsync(iTEC.Services.AccessLayer.DelightService.UserGroupDTO userGroup) {
            return base.Channel.SaveUserGroupAsync(userGroup);
        }
        
        public iTEC.Services.AccessLayer.DelightService.UserDTO[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserDTO[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.UserDTO GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserDTO> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public iTEC.Services.AccessLayer.DelightService.UserFromGroupDTO[] GetAllUsersCompareToSpecificGroup(int id) {
            return base.Channel.GetAllUsersCompareToSpecificGroup(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.UserFromGroupDTO[]> GetAllUsersCompareToSpecificGroupAsync(int id) {
            return base.Channel.GetAllUsersCompareToSpecificGroupAsync(id);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public int SaveUser(iTEC.Services.AccessLayer.DelightService.UserDTO user) {
            return base.Channel.SaveUser(user);
        }
        
        public System.Threading.Tasks.Task<int> SaveUserAsync(iTEC.Services.AccessLayer.DelightService.UserDTO user) {
            return base.Channel.SaveUserAsync(user);
        }
        
        public iTEC.Services.AccessLayer.DelightService.VotedProductDTO[] GetVotes() {
            return base.Channel.GetVotes();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VotedProductDTO[]> GetVotesAsync() {
            return base.Channel.GetVotesAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.VoteDTO GetVote(int id) {
            return base.Channel.GetVote(id);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.VoteDTO> GetVoteAsync(int id) {
            return base.Channel.GetVoteAsync(id);
        }
        
        public void DeleteVote(int id) {
            base.Channel.DeleteVote(id);
        }
        
        public System.Threading.Tasks.Task DeleteVoteAsync(int id) {
            return base.Channel.DeleteVoteAsync(id);
        }
        
        public int SaveVote(iTEC.Services.AccessLayer.DelightService.VoteDTO userGroup) {
            return base.Channel.SaveVote(userGroup);
        }
        
        public System.Threading.Tasks.Task<int> SaveVoteAsync(iTEC.Services.AccessLayer.DelightService.VoteDTO userGroup) {
            return base.Channel.SaveVoteAsync(userGroup);
        }
        
        public int Vote(string username, int productId, int points) {
            return base.Channel.Vote(username, productId, points);
        }
        
        public System.Threading.Tasks.Task<int> VoteAsync(string username, int productId, int points) {
            return base.Channel.VoteAsync(username, productId, points);
        }
        
        public int GetAllVotedPoints() {
            return base.Channel.GetAllVotedPoints();
        }
        
        public System.Threading.Tasks.Task<int> GetAllVotedPointsAsync() {
            return base.Channel.GetAllVotedPointsAsync();
        }
        
        public int GetAvailablePoints(string username) {
            return base.Channel.GetAvailablePoints(username);
        }
        
        public System.Threading.Tasks.Task<int> GetAvailablePointsAsync(string username) {
            return base.Channel.GetAvailablePointsAsync(username);
        }
        
        public iTEC.Services.AccessLayer.DelightService.BudgetDTO[] GetBudget(int budget) {
            return base.Channel.GetBudget(budget);
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.BudgetDTO[]> GetBudgetAsync(int budget) {
            return base.Channel.GetBudgetAsync(budget);
        }
        
        public iTEC.Services.AccessLayer.DelightService.ProductVoteReportChart GetProductVoteReport() {
            return base.Channel.GetProductVoteReport();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.ProductVoteReportChart> GetProductVoteReportAsync() {
            return base.Channel.GetProductVoteReportAsync();
        }
        
        public void StartSession() {
            base.Channel.StartSession();
        }
        
        public System.Threading.Tasks.Task StartSessionAsync() {
            return base.Channel.StartSessionAsync();
        }
        
        public iTEC.Services.AccessLayer.DelightService.MessageDTO GetMessage() {
            return base.Channel.GetMessage();
        }
        
        public System.Threading.Tasks.Task<iTEC.Services.AccessLayer.DelightService.MessageDTO> GetMessageAsync() {
            return base.Channel.GetMessageAsync();
        }
        
        public void SaveMessage(iTEC.Services.AccessLayer.DelightService.MessageDTO message) {
            base.Channel.SaveMessage(message);
        }
        
        public System.Threading.Tasks.Task SaveMessageAsync(iTEC.Services.AccessLayer.DelightService.MessageDTO message) {
            return base.Channel.SaveMessageAsync(message);
        }
    }
}
